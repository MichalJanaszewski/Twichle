@page "/language/{languaneName}"
@using System.Globalization
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<PageTitle>Language</PageTitle>
<div class="top-bar">
    <StatsButton/>
</div>
<div class="container">
    @if (LanguaneName != "none")
    {
        <h1>@LanguaneName</h1>
    }
    else
    {
        <div class="container">
            <h1>Choose streamers with streaming language:</h1>
            <ul class="language-list" style="flex: 1; margin-left: 50px ">
                @foreach (var language in _languages)
                {
                    <li><a class="language-list-item" style="color: black" href="/language/@language">@language</a></li>
                }
            </ul>
        </div>
    }
    

    <div style="flex: 3;">
            @if (LanguaneName != "none")
            {
                <GameBase Game="@_game" DataSelectors="@_dataSelectors" StorageKey="@_localStorageKey" TableColumNnames="@_tableColumnNames">
                    <Content>
                        <img src="@(((ChosenlanguageStreamerData)context).CategoryUrl)"
                             alt="@(((ChosenlanguageStreamerData)context).MostStreamedCategory)" class="category-img">
                    </Content>
                </GameBase>

            }
        </div>


</div>

@code {
    [Parameter]
    public string LanguaneName { get; set; } = "none";

    private string _profilesUrl = "";

    private Game<ChosenlanguageStreamerData> _game = null!;

    private string _localStorageKey = null!;
    
    private readonly string[] _languages = [
        "English",
        "Spanish",
        "Russian",
        "French",
        "Portuguese",
        "German",
        "Polish",
        "Japanese"
    ];

    private readonly string[] _tableColumnNames = { "Streamer", "Hours Watched", "Average viewers", "Total Followers", "Most streamed category" };

    private readonly Func<Streamer, object>[] _dataSelectors = new Func<Streamer, object>[] 
    {
        streamer => streamer.Profile.Name,
        streamer => streamer.Data.IntData[0],
        streamer => streamer.Data.IntData[1],
        streamer => streamer.Data.IntData[2],
        streamer => ((ChosenlanguageStreamerData)streamer.Data).MostStreamedCategory,
        streamer => ((ChosenlanguageStreamerData)streamer.Data).CategoryUrl
    };

    protected override void OnInitialized()
    {
        LanguaneName = NavigationManager.Uri.Split('/').Last();
        _profilesUrl = MainApiUrl + LanguageModeAccesUrl + LanguaneName;
        _localStorageKey = "/" + LanguageModeAccesUrl + LanguaneName + DateTime.Now.Date.ToString(CultureInfo.InvariantCulture);
        _game = new(_profilesUrl, LanguageModeAccesUrl + LanguaneName);
        StateHasChanged();
    }
}



 