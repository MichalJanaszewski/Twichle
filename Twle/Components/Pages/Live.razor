@page "/Live"
@using System.Globalization

@rendermode InteractiveServer

<PageTitle>Twichle</PageTitle>
<div class="top-bar">
    <StatsButton/>
</div>
<GameBase Game="@_game" DataSelectors="@_dataSelectors" StorageKey="@_key" TableColumNnames="@_tableColumNnames" TimerEndTime="@_endTime" ResetFlag="@ResetLiveFlagKey">
    <Content>
        <img src="@(((MainModeStreamerData)context).CategoryUrl)"
             alt="@(((MainModeStreamerData)context).MostStreamedCategory)" class="category-img" >
    </Content>
</GameBase>


@code {
    private readonly Game<MainModeStreamerData> _game = new(MainApiUrl + LiveModeAccesUrl, LiveModeAccesUrl);

    private readonly string _key = "/" + LiveModeAccesUrl + DateTime.Now.Date.ToString(CultureInfo.InvariantCulture);

    private readonly string[] _tableColumNnames = { "Streamer", "Language","Current Viewers", "Stream Duration", "Total Viewers",  "Streaming Category" };

    private readonly Func<Streamer, object>[] _dataSelectors = new Func<Streamer, object>[]
    {
        streamer => streamer.Profile.Name,
        streamer => ((MainModeStreamerData)streamer.Data).Language,
        streamer => streamer.Data.IntData[0],
        streamer => (streamer.Data.IntData[2] / 60).ToString() + "h " +  (streamer.Data.IntData[2] % 60).ToString() +"m",
        streamer => streamer.Data.IntData[1],
        streamer => ((MainModeStreamerData)streamer.Data).MostStreamedCategory,
        streamer => ((MainModeStreamerData)streamer.Data).CategoryUrl
    };
    
    private static readonly DateTime Now = DateTime.Now;

    private  DateTime _endTime;

    protected override void OnInitialized()
    {
        if (Now.Hour == 23)
        {
            _endTime = Now.AddDays(1).Date;
        }
        else
        {
            _endTime = new(Now.Year, Now.Month, Now.Day, Now.Hour + 1, 0, 0);
        }
    }

}