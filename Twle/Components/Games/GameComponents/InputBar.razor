<div>
    <label>
        <input @bind="Sufix" @oninput="UpdateItemsList" @onkeypress="OnKeyPress" />
    </label>
    <div>
        <ul style="max-height: 200px; overflow-y: auto;">
            @if (!string.IsNullOrWhiteSpace(Sufix))
            {
                foreach (var item in StreamerProfile)
                {
                    <div style="@(item.IsVisible ? "" : "display: none;")" @onclick="() => onClick(item.Id)">
                        <li>
                            <div style="display: flex; align-items: center;">
                                <img src="@item.ImageUrl" style="width: 50px; height: 50px; margin-right: 10px;" alt="Profile avatar">
                                @item.Name
                            </div>
                        </li>
                    </div>
                }
            }
            else
            {
                foreach (var item in StreamerProfile)
                {
                    <div @onclick="() => onClick(item.Id)">
                        <li>
                            <div style="display: flex; align-items: center;">
                                <img src="@item.ImageUrl" style="width: 50px; height: 50px; margin-right: 10px;" alt="Profile avatar">
                                @item.Name
                            </div>
                        </li>
                    </div>
                }
            }
        </ul>
    </div>
</div>

@code {
    [Parameter]
    public string? Sufix { get; set; }
    [Parameter]
    public EventCallback<int> PassChosenStreamer { get; set; }
    [Parameter]
    public StreamerProfile[] StreamerProfile { get; set; } = new StreamerProfile[20];

    private void UpdateItemsList(ChangeEventArgs e)
    {
        Sufix = e.Value == null ? "" : e.Value.ToString();

        foreach (var streamer in StreamerProfile)
        {
            if (streamer.Name.StartsWith(Sufix ?? "", StringComparison.OrdinalIgnoreCase))
            {
                streamer.IsVisible = true;
            }
            else
            {
                streamer.IsVisible = false;
            }

        }

        StateHasChanged();
    }

    private async Task OnKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            int foundId = FindStreamer(StreamerProfile, Sufix);
            if (foundId != -1)
            {
                foreach (var streamer in StreamerProfile)
                {    
                        streamer.IsVisible = false;
                }

                await onClick(foundId);
            }
        }
    }


    private async Task onClick(int id)
    {   
        await PassChosenStreamer.InvokeAsync(id);
        Sufix = "";
        StateHasChanged();  
    }
}
