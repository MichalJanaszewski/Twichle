@if (!_timerReached)
{
    <p class="border-text">Come back the next day or try a different mode</p>
    <p class="border-text">Time remaining until the next game: @_timeLeft?.ToString("hh\\:mm\\:ss\\.f")</p>
}
else
{
    <p class="border-text">New game should be available, try refreshing the page</p>
}
<style>
    .border-text {
        font-size: 20px;
        color: black;
        text-shadow:
            -1px -1px 0 gray,
            1px -1px 0 gray,
            -1px  1px 0 gray,
            1px  1px 0 gray;
    }
</style>


@code {
    private Timer _timer = new Timer(100);

    [Parameter] 
    public DateTime? EndTime { get; set; } = null;
    private TimeSpan? _timeLeft;
    private bool _timerReached = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        DateTime now = DateTime.Now;
        if (EndTime == default(DateTime))
        {
            EndTime = new DateTime(now.Year, now.Month, now.Day, 23, 59, 59);
        }
        
        _timeLeft = EndTime - now;
        _timer.Elapsed += TimerElapsed;
        _timer.Start();
    }

    private void TimerElapsed(object? sender, ElapsedEventArgs e)
    {
        DateTime now = DateTime.Now;
        _timeLeft = EndTime - now;

        if (EndTime.HasValue)
        {
            _timeLeft = EndTime.Value - now;

            if (now >= EndTime.Value)
            {
                _timerReached = true;
                _timer.Stop();
            }
        }

        InvokeAsync(StateHasChanged);
    }
}
