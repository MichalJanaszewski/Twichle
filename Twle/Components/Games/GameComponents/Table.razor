@if (Streamers.Any())
{
    <table class="table">
        <thead>
            <tr>
                @foreach (string columnName in ComulnNames)
                {
                    <th>@columnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (DataSelectors is null)
            {
                throw new InvalidOperationException("DataSelectors is null. Cannot iterate over null collection.");
            }

            @for (int i = 0; i < Streamers.Length; i++)
            {
                var streamer = Streamers[i];
                if (streamer is null)
                {
                    break;
                }

                if (!streamer.Profile.IsVisible)
                {
                    continue;
                }

                string[] backgrounds = streamer.GetBackrounds(WinningStreamer);
                string color = @backgrounds[backgrounds.Length - 1];
                <tr>
                    <td style="background-color: @backgrounds[0]">
                        <div>
                            <div>
                                <img src="@streamer.Profile.ImageUrl" alt="Avatar" class="img-avatar"/>
                            </div>
                            @streamer.Profile.Name
                        </div>
                    </td>
                    @for (int j = 1; j < DataSelectors.Length - 1; j++)
                    {
                        <td style="background-color: @backgrounds[j]">
                            @DataSelectors[j].Invoke(streamer)
                        </td>
                    }


                    @LastColumn?.Invoke((streamer.Data,@color))

                </tr>
            }
        </tbody>
    </table>
}


@code {
    [Parameter]
    public Streamer[] Streamers { get; set; } = new Streamer[20];

    [Parameter]
    public Func<Streamer, object>[]? DataSelectors { get; set; }

    [Parameter]
    public Streamer? WinningStreamer { get; set; }

    [Parameter]
    public string[] ComulnNames { get; set; } = [];
    
    [Parameter]
    public RenderFragment<(StreamerData StreamerData, string Color)>? LastColumn { get; set; }
    
}